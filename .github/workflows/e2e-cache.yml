name: e2e-cache

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - sample
      - releases/*
    paths-ignore:
      - '**.md'
  workflow_dispatch:

permissions:
  contents: read
jobs:
  python-pipenv-dependencies-caching:
    name: Test pipenv (Python ${{ matrix.python-version}}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        python-version:
          ['3.9', 'pypy-3.9-v7.x', '3.10', 'pypy-3.10-v7.x', '3.13.1t']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        id: cache-pipenv
        uses: ./
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pipenv'
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Prepare environment
        shell: pwsh
        run: |
          mv ./__tests__/data/Pipfile.lock .
          mv ./__tests__/data/Pipfile .
          mv ./__tests__/test-pipenv.py .
      - name: Install dependencies
        shell: pwsh
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          if ("${{ matrix.python-version }}" -Match "pypy") {
            pipenv install --python pypy # --keep-outdated
          } else {
            pipenv install --python ${{ matrix.python-version }} # --keep-outdated
          }
      - name: Run Python Script
        run: pipenv run python test-pipenv.py
  python-pipenv-dependencies-caching-path:
    name: Test pipenv (Python ${{ matrix.python-version}}, ${{ matrix.os }}, caching path)
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13]
        python-version:
          ['3.9', 'pypy-3.9-v7.x', '3.10', 'pypy-3.10-v7.x', '3.13.1t']
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        id: cache-pipenv
        uses: ./
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pipenv'
          cache-dependency-path: '**/pipenv-requirements.txt'
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - name: Prepare environment
        shell: pwsh
        run: |
          mv ./__tests__/data/Pipfile.lock .
          mv ./__tests__/data/Pipfile .
          mv ./__tests__/test-pipenv.py .
      - name: Install dependencies
        shell: pwsh
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          if ("${{ matrix.python-version }}" -Match "pypy") {
            pipenv install --python pypy # --keep-outdated
          } else {
            pipenv install --python ${{ matrix.python-version }} # --keep-outdated
          }
      - name: Run Python Script
        run: pipenv run python test-pipenv.py
